esquisse:::esquisser()
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10"
)
library(readxl)
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10")
View(Atlas_2013_municipal_estadual_e_Brasil)
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10"
)
esquisse:::esquisser()
esquisse:::esquisser()
Atlas_2013_municipal_estadual_e_Brasil
l
library(ggplot2)
ggplot(Atlas_2013_municipal_estadual_e_Brasil) +
aes(x = IDHM_R, y = IDHM_L, colour = IDHM, size = pesotot) +
geom_point(shape = "circle") +
scale_color_gradient(low = "#132B43", high = "#2AFF00") +
labs(title = " IDHM_Renda_Long_1999_2000_2010",
caption = "Fonte: Atlas Brasil, 2013.") +
theme_minimal() +
theme(plot.title = element_text(face = "bold",
hjust = 0.5), plot.caption = element_text(size = 10L, hjust = 0.5)) +
facet_wrap(vars(ANO))
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10"
)
View(Atlas_2013_municipal_estadual_e_Brasil)
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10"
)
View(Atlas_2013_municipal_estadual_e_Brasil)
View(Atlas_2013_municipal_estadual_e_Brasil)
library(readxl)
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10")
View(Atlas_2013_municipal_estadual_e_Brasil)
library(readxl)
library(ggplot2)
Atlas_2013_municipal_estadual_e_Brasil <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "UF 91-00-10")
ggplot(Atlas_2013_municipal_estadual_e_Brasil) +
aes(x = IDHM_R, y = IDHM_L, colour = IDHM, size = pesotot) + #o + significa que há mais linhas
geom_point(shape = "circle") +
scale_color_gradient(low = "#132B43", high = "#2AFF00") +
labs(title = " IDHM_Renda_Long_1999_2000_2010",
caption = "Fonte: Atlas Brasil, 2013.") +
theme_minimal() +
theme(plot.title = element_text(face = "bold",
hjust = 0.5), plot.caption = element_text(size = 10L, hjust = 0.5)) +
facet_wrap(vars(ANO))
install.packages("ggrepel")
install.packages("ggpmisc")
install.pcakages("scales")
install.pcakages("scales")
# carrega os pacotes da biblioteca
# ggplot2 faz os gráficos
library(ggplot2)
library(ggpmisc)
# O pacote ggrepel vamos usar a função geom_text_repel() para incluir a variável UFN,
# que contém os nomes dos estados, como rótulo para os pontos no gráfico.
# Essa função além de incluir os nomes, procura ajustar a distância para
# evitar sopreposições, repelindo os textos em torno de cada círculo no gráfico.
library(ggrepel)
# O pacote scales faz as alterações no formato das legendas, escalas e eixos
# com a função format_format()
library(scales)
#Executar o código ggplot2 com as mudanças
ggplot(Atlas_2013_municipal_estadual_e_Brasil) +
aes(x = IDHM_R, y = IDHM_L, colour = IDHM, size = pesotot) +
# inclui uma reta de regressão com intervalos de confiança
stat_poly_line() +
# inlcui a equação e R², posicionados na altura do eixo x = 0.5 e y = 0.002, para não ficar em cima dos pontos do gráfico
stat_poly_eq((use_label(c("eq", "R2"))), label.x = 0.5, label.y = 0.02) +
geom_point(shape = "circle") +
# inclui a formatação de casas decimais nas legendas de Cor/colour e Tamanho/size
scale_color_gradient(low = "#FF00CA", high = "#0AD53E", labels = format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
scale_size(labels = format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
labs(color = "IDHM",
size = "População") +
theme_minimal() +
facet_wrap(vars(ANO)) +
# acrescenta as unidades da federação como rótulo de ponto de dados.
geom_text_repel(aes(label = UFN), size = 3, max.overlaps = Inf)
### fim
library(ggplot2)
# O pacote ggpmisc acrescenta ao pacote ggplot2 uma miscelânia de novas funções.
# Vamos usar as funções stat_poly_line(), stat_poly_eq() para incluir a reta de regressão, equação e R²
library(ggpmisc)
# O pacote ggrepel vamos usar a função geom_text_repel() para incluir a variável UFN,
# que contém os nomes dos estados, como rótulo para os pontos no gráfico.
# Essa função além de incluir os nomes, procura ajustar a distância para
# evitar sopreposições, repelindo os textos em torno de cada círculo no gráfico.
library(ggrepel)
# O pacote scales faz as alterações no formato das legendas, escalas e eixos
# com a função format_format()
library(scales)
#Executar o código ggplot2 com as mudanças
ggplot(Atlas_2013_municipal_estadual_e_Brasil) +
aes(x = IDHM_R, y = IDHM_L, colour = IDHM, size = pesotot) +
# inclui a formatação de casas decimais nas legendas de Cor/colour e Tamanho/size
scale_color_gradient(low = "#FF00CA", high = "#0AD53E", labels = format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
scale_size(labels = format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
labs(color = "IDHM",
size = "População") +
theme_minimal() +
facet_wrap(vars(ANO))
### fim
#Executar o código ggplot2 com as mudanças
ggplot(Atlas_2013_municipal_estadual_e_Brasil) +
aes(x = IDHM_R, y = IDHM_L, colour = IDHM, size = pesotot) +
# inclui uma reta de regressão com intervalos de confiança
stat_poly_line() +
# inlcui a equação e R², posicionados na altura do eixo x = 0.5 e y = 0.002, para não ficar em cima dos pontos do gráfico
stat_poly_eq((use_label(c("eq", "R2"))), label.x = 0.5, label.y = 0.02) +
geom_point(shape = "circle") +
# inclui a formatação de casas decimais nas legendas de Cor/colour e Tamanho/size
scale_color_gradient(low = "#FF00CA", high = "#0AD53E", labels = format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
scale_size(labels = format_format(big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
labs(color = "IDHM",
size = "População") +
theme_minimal() +
facet_wrap(vars(ANO)) +
library(ggplot2)
# carrega os pacotes da biblioteca
# ggplot2 faz os gráficos
library(ggplot2)
# O pacote ggpmisc acrescenta ao pacote ggplot2 uma miscelânia de novas funções.
# Vamos usar as funções stat_poly_line(), stat_poly_eq() para incluir a reta de regressão, equação e R²
library(ggpmisc)
# O pacote ggrepel vamos usar a função geom_text_repel() para incluir a variável UFN,
# que contém os nomes dos estados, como rótulo para os pontos no gráfico.
# Essa função além de incluir os nomes, procura ajustar a distância para
# evitar sopreposições, repelindo os textos em torno de cada círculo no gráfico.
library(ggrepel)
l
install.packages("ggrepel")
install.packages("ggpmisc")
install.pcakages("scales")
install.packages("ggrepel")
install.packages("ggpmisc")
install.packages("scales")
install.packages("scales")
library(ggplot2)
library(readxl)
ggplot(Atlas_2013_municipal_estadual_e_Brasil) +
aes(x = IDHM_R, y = IDHM_L, colour = IDHM, size = pesotot) + #o + significa que há mais linhas
geom_point(shape = "circle") +
scale_color_gradient(low = "#132B43", high = "#2AFF00") +
labs(title = " IDHM_Renda_Long_1999_2000_2010",
caption = "Fonte: Atlas Brasil, 2013.") +
theme_minimal() +
theme(plot.title = element_text(face = "bold",
hjust = 0.5), plot.caption = element_text(size = 10L, hjust = 0.5)) +
facet_wrap(vars(ANO))
esquisse:::esquisser()
knitr::opts_chunk$set(echo = TRUE)
# 1. carregar pacotes necessários
library(ggplot2)
# 2. importar dados
load("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/First_project_in_R/dados/Atlas_tblData.RData")
knitr::opts_chunk$set(echo = TRUE)
# 1. carregar pacotes necessários
library(ggplot2)
# 2. importar dados
load("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/First_project_in_R/dados/Atlas_tblData.RData")
curso <- c("Sociologia", "Administração", "Administração", "Ciências Sociais", "Educação",
"Administração","Comunicação")
uf_origem <-c("Paraná", "São Paulo","Paraná","Mato Grosso",
"Rio de Janeiro", "São Paulo", "Paraná")
uf_destino <-c("Paraná", "Paraná", "São Paulo", "Paraná",rep("São Paulo,3"))
idade <-c(24,21,22,22,20,31,30)
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
curso <- c("Sociologia", "Administração", "Administração", "Ciências Sociais", "Educação",
"Administração","Comunicação")
uf_origem <-c("Paraná", "São Paulo","Paraná","Mato Grosso",
"Rio de Janeiro", "São Paulo", "Paraná")
uf_destino <-c("Paraná", "Paraná", "São Paulo", "Paraná",rep("São Paulo,3"))
idade <-c(24,21,22,22,20,31,30)
tabela$curso
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
uf_destino <-c("Paraná", "Paraná", "São Paulo", "Paraná",rep("São Paulo,2"))
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
uf_destino <-c("Paraná", "Paraná", "São Paulo", "Paraná",rep("São Paulo",3))
idade <-c(24,21,22,22,20,31,30)
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
tabela$curso
View(tabela)
tabela$curso
tabela[tabela$curso == “Administração”, c (“Curso”, “idade”)
tabela[tabela$curso == “Administração”, c(“Curso”, “idade”)]
[tabela$curso == “Administração”, c(“Curso”, “idade”)]
[tabela$curso == “Administração”, c(“curso”, “idade”)]
tabela[tabela$curso == “Administração”, c(“curso”, “idade”)]
tabela$curso
tabela [tabela$curso == “Administração”, c(“curso”, “idade”)]
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
tabela$curso
tabela[tabela$curso == "Administração", c("curso",idade)]
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
tabela$curso
tabela[tabela$curso == "Administração", c("curso",idade)]
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
tabela[tabela$curso == "Administração", c("curso",idade)]
tabela[tabela$curso == "Administração", c("curso","idade")]
tabela[tabela$curso == "Administração", c("curso","idade")]
tabela[tabela$curso == "educação", c("curso","idade")]
tabela[tabela$curso == "Educação", c("curso","idade")]
curso <- c("Sociologia", "Administração", "Administração", "Ciências Sociais", "Educação",
"Administração","Comunicação")
uf_origem <-c("Paraná", "São Paulo","Paraná","Mato Grosso",
"Rio de Janeiro", "São Paulo", "Paraná")
uf_destino <-c("Paraná", "Paraná", "São Paulo", "Paraná",rep("São Paulo",3))
idade <-c(24,21,22,22,20,31,30)
tabela<-data.frame(curso, uf_origem, uf_destino, idade)
tabela[tabela$curso == "Educação", c("curso","idade")]
tabela$curso
tabela[tabela$curso == "Administração", c("curso","idade")]
View(tabela)
View(tabela)
View(tabela)
# Manipulando dados com dplyr
# 1. Importar os dados
library(tidyverse) # conjunto de pacotes dentro do tidyverse
library(readxl)
munic_tbl <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "MUN 91-00-10")
View(munic_tbl)
View(munic_tbl)
View(munic_tbl)
save.image("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/First_project_in_R/dados/munic_tbl.RData")
View(munic_tbl)
View(Atlas_2013_municipal_estadual_e_Brasil)
munic_tbl <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "MUN 91-00-10")
View(munic_tbl)
View(munic_tbl)
munic_tbl
sumary(munic_tbl)
install.packages("sumarytools")
summary(munic_tbl)
install.packages("summarytools")
library(summarytools)
install.packages("learnr")
view(dfSummary(munic_tbl))
# Manipulando dados com dplyr
# 1. Importar os dados
library(tidyverse) # conjunto de pacotes dentro do tidyverse
library(readxl)
munic_tbl <- read_excel("dados/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "MUN 91-00-10")
View(munic_tbl)
install.packages("summarytools") #quando for para instalar tem que colocar entre aspas.E aqui ele precisa procurar em uma lista, é uma palavra.
library(summarytools) #depois de instalado, ele passa ser um objeto na biblioteca e nao precisa colocar aspas.
# o library pega da biblioteca e traz da bibleoteca e coloca na memoria. É como pegarum livro e trazer pra ler.
view(dfSummary(munic_tbl))
View(munic_tbl)
# A tibble:16,665 X 237
munic_tbl
library(tidyverse)
library(tidyverse)
munic_tbl |>
select(ANO, UF, Codmun7, Município, IDHM, IDHM_E,IDHM_L, IDHM_R, POP, pesotot,
pesourb, pesoRUR) %>%
mutate(classe_pop = case_when(
(POP < 5001) ~ "1) Até 5.000",
(POP > 5000 & POP < 20001) ~ "2) 5.001 a 20.000",
(POP > 20000 & POP < 100000) ~ "3) 20.001 a 100.000",
(POP > 100000 & POP < 500000) ~ "4) 100.001 a 500.000",
(POP > 500000) ~ "5) Mais de 500.000",
))|>
mutate(classe_idhm = case_when(
(IDHM < 0.5) ~ "Muito baixo",
(IDHM >= 0.5 & IDHM < 0.6) ~ "Baixo",
(IDHM >= 0.6 & IDHM < 0.7) ~ "Médio",
(IDHM >= 0.7 & IDHM < 0.8) ~ "Alto",
(IDHM >= 0.8) ~ "Muito Alto",
))|>
mutate(taxa_urbanizacao = (pesourb / pesotot) *100) |>
mutate(urbano_rural = case_when(
(taxa_urbanizacao >= 50) ~ "Urbano",
(taxa_urbanizacao < 50) ~ "Rural")) -> m2_munic
View(m2_munic)
#Agrupados por ano se tem diferença entre municipio rural e urbano a média do idhm
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM),total_de_municipios = n())
m2_munic |>
group_by(ANO,classe_pop) |>
summarise(media = mean(IDHM),total_de_municipios = n())
m2_munic |>
group_by(ANO, classe_pop) |>
summarise(media = mena (IDHM_E), total_de_municipios = n())
m2_munic |>
group_by(ANO, classe_pop) |>
summarise(media = mean (IDHM_E), total_de_municipios = n())
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM_E), total_de_municipios =n())
#IDHM Renda media
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM_R), total_de_municipios =n())
m2_munic |>
group_by(ANO,classe_pop) |>
summarise(media = mean(IDHM_R), total_de_municipios =n())
library(tidyverse)
munic_tbl |>
select(ANO, UF, Codmun7, Município, IDHM, IDHM_E,IDHM_L, IDHM_R, POP, pesotot,
pesourb, pesoRUR) %>%
mutate(classe_pop = case_when(
(POP < 5001) ~ "1) Até 5.000",
(POP > 5000 & POP < 20001) ~ "2) 5.001 a 20.000",
(POP > 20000 & POP < 100000) ~ "3) 20.001 a 100.000",
(POP > 100000 & POP < 500000) ~ "4) 100.001 a 500.000",
(POP > 500000) ~ "5) Mais de 500.000",
))|>
mutate(classe_idhm = case_when(
(IDHM < 0.5) ~ "Muito baixo",
(IDHM >= 0.5 & IDHM < 0.6) ~ "Baixo",
(IDHM >= 0.6 & IDHM < 0.7) ~ "Médio",
(IDHM >= 0.7 & IDHM < 0.8) ~ "Alto",
(IDHM >= 0.8) ~ "Muito Alto",
))|>
mutate(taxa_urbanizacao = (pesourb / pesotot) *100) |>
mutate(urbano_rural = case_when(
(taxa_urbanizacao >= 50) ~ "Urbano",
(taxa_urbanizacao < 50) ~ "Rural")) -> m2_munic
#Agrupados por ano se tem diferença entre municipio rural e urbano a média do IDHM
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM),total_de_municipios = n())
m2_munic |>
group_by(ANO,classe_pop) |>
summarise(media = mean(IDHM),total_de_municipios = n())
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM_E), total_de_municipios =n())
m2_munic |>
group_by(ANO, classe_pop) |>
summarise(media = mean (IDHM_E), total_de_municipios = n())
#IDHM Renda media
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM_R), total_de_municipios =n())
m2_munic |>
group_by(ANO,classe_pop) |>
summarise(media = mean(IDHM_R), total_de_municipios =n())
#IDHM Longevidade
m2_munic |>
group_by(ANO,urbano_rural) |>
summarise(media = mean(IDHM_L), total_de_municipios =n())
m2_munic |>
group_by(ANO,classe_pop) |>
summarise(media = mean(IDHM_L), total_de_municipios =n())
library(tidyverse)
library(readxl)
library(esquisse)
registro_munic <- read_excel("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/DOWNLOAD REGISTRO ADMINISTRATIVO TOTAL 2012 A 2017.xlsx",
sheet = "MUNICÍPIO")
censo_munic <- read_excel("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "MUN 91-00-10")
censo_munic |>
select(ANO, UF, Codmun7, IDHM, IDHM_E, IDHM_L, IDHM_R, POP, pesotot, pesourb, pesoRUR, E_ANOSESTUDO) %>%
mutate(classe_pop = case_when(
(POP < 5001) ~ "1) Até 5.000",
(POP > 5000 & POP < 20001) ~ "2) 5.001 a 20.000",
(POP > 20000 & POP < 100000) ~ "3) 20.001 a 100.000",
(POP > 100000 & POP < 500000) ~ "4) 100.001 a 500.000",
(POP > 500000) ~ "5) Mais de 500.000",
)) |>
mutate(classe_idhm = case_when(
(IDHM < 0.5) ~ "Muito baixo",
(IDHM >= 0.5 & IDHM < 0.6) ~ "Baixo",
(IDHM >= 0.6 & IDHM < 0.7) ~ "Médio",
(IDHM >= 0.7 & IDHM < 0.8) ~ "Alto",
(IDHM >= 0.8) ~ "Muito Alto",
)) |>
mutate(taxa_urbanizacao = (pesourb / pesotot) * 100) |>
mutate(urbano_rural = case_when(
(taxa_urbanizacao >= 50) ~ "Urbano",
(taxa_urbanizacao < 50) ~ "Rural")) -> m1_censo_munic
# Selecionar as variáveis em registro_munic
m1_regist_munic <- registro_munic |>
select(ANO, NOME, IBGE7, IDEB_AI, IDEB_AF)
# filtrar anos em m1_censo_munic e m1_regist_munic
m1_censo_munic |>
filter(ANO == 2010) -> censo_munic2_2010
m1_regist_munic |>
filter(ANO == 2013) -> registro_munic2_2013
# juntar tabelas pela chave do código dos Municipios de sete dígitos do IBGE
censo_munic2_2010 |>
full_join(registro_munic2_2013, by = c("Codmun7"="IBGE7")) |>
na.omit() -> juncao1_censo_reg
library(tidyverse)
library(tidyverse)
library(readxl)
library(esquisse)
library(tidyverse)
library(readxl)
library(esquisse)
registro_munic <- read_excel("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/DOWNLOAD REGISTRO ADMINISTRATIVO TOTAL 2012 A 2017.xlsx",
sheet = "MUNICÍPIO")
censo_munic <- read_excel("C:/Users/Graziela/Downloads/Curso R para indicadores sociais _UEL/Exercícios/Atlas 2013_municipal, estadual e Brasil.xlsx",
sheet = "MUN 91-00-10")
censo_munic |>
select(ANO, UF, Codmun7, IDHM, IDHM_E, IDHM_L, IDHM_R, POP, pesotot, pesourb, pesoRUR, E_ANOSESTUDO) %>%
mutate(classe_pop = case_when(
(POP < 5001) ~ "1) Até 5.000",
(POP > 5000 & POP < 20001) ~ "2) 5.001 a 20.000",
(POP > 20000 & POP < 100000) ~ "3) 20.001 a 100.000",
(POP > 100000 & POP < 500000) ~ "4) 100.001 a 500.000",
(POP > 500000) ~ "5) Mais de 500.000",
)) |>
mutate(classe_idhm = case_when(
(IDHM < 0.5) ~ "Muito baixo",
(IDHM >= 0.5 & IDHM < 0.6) ~ "Baixo",
(IDHM >= 0.6 & IDHM < 0.7) ~ "Médio",
(IDHM >= 0.7 & IDHM < 0.8) ~ "Alto",
(IDHM >= 0.8) ~ "Muito Alto",
)) |>
mutate(taxa_urbanizacao = (pesourb / pesotot) * 100) |>
mutate(urbano_rural = case_when(
(taxa_urbanizacao >= 50) ~ "Urbano",
(taxa_urbanizacao < 50) ~ "Rural")) -> m1_censo_munic
# Selecionar as variáveis em registro_munic
m1_regist_munic <- registro_munic |>
select(ANO, NOME, IBGE7, IDEB_AI, IDEB_AF)
# filtrar anos em m1_censo_munic e m1_regist_munic
m1_censo_munic |>
filter(ANO == 2010) -> censo_munic2_2010
m1_regist_munic |>
filter(ANO == 2013) -> registro_munic2_2013
# juntar tabelas pela chave do código dos Municipios de sete dígitos do IBGE
censo_munic2_2010 |>
full_join(registro_munic2_2013, by = c("Codmun7"="IBGE7")) |>
na.omit() -> juncao1_censo_reg
ggplot(juncao1_censo_reg) +
aes(x = IDHM, y = IDHM_R, colour = E_ANOSESTUDO) +
geom_point(shape = "circle", size = 1.5) +
scale_color_distiller(palette = "Paired", direction = 1) +
labs(title = "Tempo de Estudo e relação IDHM e IDHM_R") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", hjust = 0.5)) +
facet_wrap(vars(urbano_rural))
ggplot(juncao1_censo_reg) +
aes(x = IDHM_R, y = E_ANOSESTUDO, colour = urbano_rural) +
geom_point(shape = "circle", size = 1.5) +
scale_color_manual(
values = c(Rural = "#A6CEE3",
Urbano = "#B15928")
) +
labs(
title = "Relação IDHM_R e Anos de Estudo",
caption = "Fonte: Atlas Brasil e IBGE"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold",
hjust = 0.5),
plot.caption = element_text(hjust = 0.5)
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library()
